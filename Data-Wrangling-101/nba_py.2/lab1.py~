import pandas as pd
from nba_py import team

#print "-----------test-----------"

'''
knicks = team.TeamPassTracking(1610612752)
#the dataframe.head(N) command returns the first N rows of a dataframe
print knicks.passes_made().head(10)

'''

#--------------
'''
knicks_last_game = team.TeamPassTracking(1610612752, last_n_games =  1)
print knicks_last_game.passes_made().head(10)
'''

#-----------------

knicks_id = 1610612752
knicks_shots = team.TeamShotTracking(knicks_id, last_n_games =  1)
knicks_shots.closest_defender_shooting()
#print knicks_shots.closest_defender_shooting()


#----------------

df_grouped = knicks_shots.closest_defender_shooting()

df_grouped['OPEN'] = df_grouped['CLOSE_DEF_DIST_RANGE'].map(lambda x : True if 'Open' in x else False)
##This creates a new column  OPEN,  mapped from the 'CLOSE_DEF_DIST_RANGE' column.
df_grouped

total_open_shots  = df_grouped.loc[df_grouped['OPEN'] == True, 'FGA'].sum()
print total_open_shots

#Mapping the formula above into a column:
open_efg = (df_grouped.loc[df_grouped['OPEN']== True, 'FGM'].sum() + (.5 * df_grouped.loc[df_grouped['OPEN']== True, 'FG3M'].sum()))/(df_grouped.loc[df_grouped['OPEN']== True, 'FGA'].sum())
covered_efg = (df_grouped.loc[df_grouped['OPEN']== False, 'FGM'].sum() + (.5 * df_grouped.loc[df_grouped['OPEN']== False, 'FG3M'].sum()))/(df_grouped.loc[df_grouped['OPEN']== False, 'FGA'].sum())

print open_efg
print covered_efg


#----------------

date = '2017-01-29'
knicks_jan = team.TeamShotTracking(knicks_id, date_from = date, date_to =  date)

knicks_jan_shots =  knicks_jan.closest_defender_shooting()

knicks_jan_shots


#----------------
#Hitting another endpoint
knicks_log = team.TeamGameLogs(knicks_id)

knicks_log.info()


#-----------------
df_game_log = knicks_log.info()

df_game_log['GAME_DATE']=pd.to_datetime(df_game_log['GAME_DATE'])  ##converting the columns datatype

df_game_log['DAYS_REST'] = df_game_log['GAME_DATE']- df_game_log['GAME_DATE'].shift(-1)

df_game_log.head()
